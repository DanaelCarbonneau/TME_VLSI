$date
  Wed Dec  6 12:56:25 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! if_adr[31:0] $end
$var reg 1 " if_adr_valid $end
$var reg 32 # ic_inst[31:0] $end
$var reg 1 $ ic_stall $end
$var reg 32 % mem_adr[31:0] $end
$var reg 1 & mem_stw $end
$var reg 1 ' mem_stb $end
$var reg 1 ( mem_load $end
$var reg 32 ) mem_data[31:0] $end
$var reg 32 * dc_data[31:0] $end
$var reg 1 + dc_stall $end
$var reg 1 , ck $end
$var reg 1 - reset_n $end
$var reg 1 . vdd $end
$var reg 1 / vss $end
$var reg 32 0 goodadr[31:0] $end
$var reg 32 1 badadr[31:0] $end
$scope module icache_i $end
$var reg 32 2 if_adr[31:0] $end
$var reg 1 3 if_adr_valid $end
$var reg 32 4 ic_inst[31:0] $end
$var reg 1 5 ic_stall $end
$upscope $end
$scope module dcache_i $end
$var reg 32 6 mem_adr[31:0] $end
$var reg 1 7 mem_stw $end
$var reg 1 8 mem_stb $end
$var reg 1 9 mem_load $end
$var reg 32 : mem_data[31:0] $end
$var reg 32 ; dc_data[31:0] $end
$var reg 1 < dc_stall $end
$var reg 1 = ck $end
$upscope $end
$scope module arm_core_i $end
$var reg 32 > if_adr[31:0] $end
$var reg 1 ? if_adr_valid $end
$var reg 32 @ ic_inst[31:0] $end
$var reg 1 A ic_stall $end
$var reg 32 B mem_adr[31:0] $end
$var reg 1 C mem_stw $end
$var reg 1 D mem_stb $end
$var reg 1 E mem_load $end
$var reg 32 F mem_data[31:0] $end
$var reg 32 G dc_data[31:0] $end
$var reg 1 H dc_stall $end
$var reg 1 I ck $end
$var reg 1 J reset_n $end
$var reg 1 K vdd $end
$var reg 1 L vss $end
$var reg 1 M if_pop $end
$var reg 32 N if_ir[31:0] $end
$var reg 1 O if2dec_empty $end
$var reg 32 P dec_op1[31:0] $end
$var reg 32 Q dec_op2[31:0] $end
$var reg 4 R dec_exe_dest[3:0] $end
$var reg 1 S dec_exe_wb $end
$var reg 1 T dec_flag_wb $end
$var reg 32 U dec_mem_data[31:0] $end
$var reg 4 V dec_mem_dest[3:0] $end
$var reg 1 W dec_pre_index $end
$var reg 1 X dec_mem_lw $end
$var reg 1 Y dec_mem_lb $end
$var reg 1 Z dec_mem_sw $end
$var reg 1 [ dec_mem_sb $end
$var reg 1 \ dec_shift_lsl $end
$var reg 1 ] dec_shift_lsr $end
$var reg 1 ^ dec_shift_asr $end
$var reg 1 _ dec_shift_ror $end
$var reg 1 ` dec_shift_rrx $end
$var reg 5 a dec_shift_val[4:0] $end
$var reg 1 b dec_cy $end
$var reg 1 c dec_comp_op1 $end
$var reg 1 d dec_comp_op2 $end
$var reg 1 e dec_alu_cy $end
$var reg 1 f dec2exe_empty $end
$var reg 2 g dec_alu_cmd[1:0] $end
$var reg 32 h dec_pc[31:0] $end
$var reg 1 i dec2if_empty $end
$var reg 1 j dec_pop $end
$var reg 1 k exe_pop $end
$var reg 32 l exe_res[31:0] $end
$var reg 1 m exe_c $end
$var reg 1 n exe_v $end
$var reg 1 o exe_n $end
$var reg 1 p exe_z $end
$var reg 4 q exe_dest[3:0] $end
$var reg 1 r exe_wb $end
$var reg 1 s exe_flag_wb $end
$var reg 32 t exe_mem_adr[31:0] $end
$var reg 32 u exe_mem_data[31:0] $end
$var reg 4 v exe_mem_dest[3:0] $end
$var reg 1 w exe_mem_lw $end
$var reg 1 x exe_mem_lb $end
$var reg 1 y exe_mem_sw $end
$var reg 1 z exe_mem_sb $end
$var reg 1 { exe2mem_empty $end
$var reg 1 | mem_pop $end
$var reg 32 } mem_res[31:0] $end
$var reg 4 !" mem_dest[3:0] $end
$var reg 1 "" mem_wb $end
$scope module ifetch_i $end
$var reg 32 #" if_adr[31:0] $end
$var reg 1 $" if_adr_valid $end
$var reg 32 %" ic_inst[31:0] $end
$var reg 1 &" ic_stall $end
$var reg 1 '" dec2if_empty $end
$var reg 1 (" if_pop $end
$var reg 32 )" dec_pc[31:0] $end
$var reg 32 *" if_ir[31:0] $end
$var reg 1 +" if2dec_empty $end
$var reg 1 ," dec_pop $end
$var reg 1 -" ck $end
$var reg 1 ." reset_n $end
$var reg 1 /" vdd $end
$var reg 1 0" vss $end
$var reg 1 1" if2dec_push $end
$var reg 1 2" if2dec_full $end
$scope module if2dec $end
$var reg 32 3" din[31:0] $end
$var reg 32 4" dout[31:0] $end
$var reg 1 5" push $end
$var reg 1 6" pop $end
$var reg 1 7" full $end
$var reg 1 8" empty $end
$var reg 1 9" reset_n $end
$var reg 1 :" ck $end
$var reg 1 ;" vdd $end
$var reg 1 <" vss $end
$var reg 32 =" fifo_d[31:0] $end
$var reg 1 >" fifo_v $end
$upscope $end
$upscope $end
$scope module decod_i $end
$var reg 32 ?" dec_op1[31:0] $end
$var reg 32 @" dec_op2[31:0] $end
$var reg 4 A" dec_exe_dest[3:0] $end
$var reg 1 B" dec_exe_wb $end
$var reg 1 C" dec_flag_wb $end
$var reg 32 D" dec_mem_data[31:0] $end
$var reg 4 E" dec_mem_dest[3:0] $end
$var reg 1 F" dec_pre_index $end
$var reg 1 G" dec_mem_lw $end
$var reg 1 H" dec_mem_lb $end
$var reg 1 I" dec_mem_sw $end
$var reg 1 J" dec_mem_sb $end
$var reg 1 K" dec_shift_lsl $end
$var reg 1 L" dec_shift_lsr $end
$var reg 1 M" dec_shift_asr $end
$var reg 1 N" dec_shift_ror $end
$var reg 1 O" dec_shift_rrx $end
$var reg 5 P" dec_shift_val[4:0] $end
$var reg 1 Q" dec_cy $end
$var reg 1 R" dec_comp_op1 $end
$var reg 1 S" dec_comp_op2 $end
$var reg 1 T" dec_alu_cy $end
$var reg 1 U" dec2exe_empty $end
$var reg 1 V" exe_pop $end
$var reg 2 W" dec_alu_cmd[1:0] $end
$var reg 32 X" exe_res[31:0] $end
$var reg 1 Y" exe_c $end
$var reg 1 Z" exe_v $end
$var reg 1 [" exe_n $end
$var reg 1 \" exe_z $end
$var reg 4 ]" exe_dest[3:0] $end
$var reg 1 ^" exe_wb $end
$var reg 1 _" exe_flag_wb $end
$var reg 32 `" dec_pc[31:0] $end
$var reg 32 a" if_ir[31:0] $end
$var reg 1 b" dec2if_empty $end
$var reg 1 c" if_pop $end
$var reg 1 d" if2dec_empty $end
$var reg 1 e" dec_pop $end
$var reg 32 f" mem_res[31:0] $end
$var reg 4 g" mem_dest[3:0] $end
$var reg 1 h" mem_wb $end
$var reg 1 i" ck $end
$var reg 1 j" reset_n $end
$var reg 1 k" vdd $end
$var reg 1 l" vss $end
$var reg 1 m" cond $end
$var reg 1 n" condv $end
$var reg 1 o" operv $end
$var reg 1 p" regop_t $end
$var reg 1 q" mult_t $end
$var reg 1 r" swap_t $end
$var reg 1 s" trans_t $end
$var reg 1 t" mtrans_t $end
$var reg 1 u" branch_t $end
$var reg 1 v" and_i $end
$var reg 1 w" eor_i $end
$var reg 1 x" sub_i $end
$var reg 1 y" rsb_i $end
$var reg 1 z" add_i $end
$var reg 1 {" adc_i $end
$var reg 1 |" sbc_i $end
$var reg 1 }" rsc_i $end
$var reg 1 !# tst_i $end
$var reg 1 "# teq_i $end
$var reg 1 ## cmp_i $end
$var reg 1 $# cmn_i $end
$var reg 1 %# orr_i $end
$var reg 1 &# mov_i $end
$var reg 1 '# bic_i $end
$var reg 1 (# mvn_i $end
$var reg 1 )# mul_i $end
$var reg 1 *# mla_i $end
$var reg 1 +# ldr_i $end
$var reg 1 ,# str_i $end
$var reg 1 -# ldrb_i $end
$var reg 1 .# strb_i $end
$var reg 1 /# ldm_i $end
$var reg 1 0# stm_i $end
$var reg 1 1# b_i $end
$var reg 1 2# bl_i $end
$var reg 1 3# blink $end
$var reg 1 4# mtrans_shift $end
$var reg 16 5# mtrans_mask_shift[15:0] $end
$var reg 16 6# mtrans_mask[15:0] $end
$var reg 16 7# mtrans_list[15:0] $end
$var reg 1 8# mtrans_1un $end
$var reg 1 9# mtrans_loop_adr $end
$var reg 5 :# mtrans_nbr[4:0] $end
$var reg 4 ;# mtrans_rd[3:0] $end
$var reg 4 <# radr1[3:0] $end
$var reg 32 =# rdata1[31:0] $end
$var reg 1 ># rvalid1 $end
$var reg 4 ?# radr2[3:0] $end
$var reg 32 @# rdata2[31:0] $end
$var reg 1 A# rvalid2 $end
$var reg 4 B# radr3[3:0] $end
$var reg 32 C# rdata3[31:0] $end
$var reg 1 D# rvalid3 $end
$var reg 4 E# inval_exe_adr[3:0] $end
$var reg 1 F# inval_exe $end
$var reg 4 G# inval_mem_adr[3:0] $end
$var reg 1 H# inval_mem $end
$var reg 1 I# cry $end
$var reg 1 J# zero $end
$var reg 1 K# neg $end
$var reg 1 L# ovr $end
$var reg 1 M# reg_cznv $end
$var reg 1 N# reg_vv $end
$var reg 1 O# inval_czn $end
$var reg 1 P# inval_ovr $end
$var reg 32 Q# reg_pc[31:0] $end
$var reg 1 R# reg_pcv $end
$var reg 1 S# inc_pc $end
$var reg 1 T# dec2if_full $end
$var reg 1 U# dec2if_push $end
$var reg 1 V# dec2exe_full $end
$var reg 1 W# dec2exe_push $end
$var reg 1 X# if2dec_pop $end
$var reg 32 Y# op1[31:0] $end
$var reg 32 Z# op2[31:0] $end
$var reg 4 [# alu_dest[3:0] $end
$var reg 1 \# alu_wb $end
$var reg 1 ]# flag_wb $end
$var reg 32 ^# offset32[31:0] $end
$var reg 32 _# mem_data[31:0] $end
$var reg 4 `# ld_dest[3:0] $end
$var reg 1 a# pre_index $end
$var reg 1 b# mem_lw $end
$var reg 1 c# mem_lb $end
$var reg 1 d# mem_sw $end
$var reg 1 e# mem_sb $end
$var reg 1 f# shift_lsl $end
$var reg 1 g# shift_lsr $end
$var reg 1 h# shift_asr $end
$var reg 1 i# shift_ror $end
$var reg 1 j# shift_rrx $end
$var reg 5 k# shift_val[4:0] $end
$var reg 1 l# cy $end
$var reg 1 m# comp_op1 $end
$var reg 1 n# comp_op2 $end
$var reg 1 o# alu_cy $end
$var reg 2 p# alu_cmd[1:0] $end
$comment cur_state is not handled $end
$comment next_state is not handled $end
$var reg 4 q# debug_state[3:0] $end
$scope module dec2exec $end
$var reg 127 r# din[126:0] $end
$var reg 127 s# dout[126:0] $end
$var reg 1 t# push $end
$var reg 1 u# pop $end
$var reg 1 v# full $end
$var reg 1 w# empty $end
$var reg 1 x# reset_n $end
$var reg 1 y# ck $end
$var reg 1 z# vdd $end
$var reg 1 {# vss $end
$var reg 127 |# fifo_d[126:0] $end
$var reg 1 }# fifo_v $end
$upscope $end
$scope module dec2if $end
$var reg 32 !$ din[31:0] $end
$var reg 32 "$ dout[31:0] $end
$var reg 1 #$ push $end
$var reg 1 $$ pop $end
$var reg 1 %$ full $end
$var reg 1 &$ empty $end
$var reg 1 '$ reset_n $end
$var reg 1 ($ ck $end
$var reg 1 )$ vdd $end
$var reg 1 *$ vss $end
$var reg 32 +$ fifo_d[31:0] $end
$var reg 1 ,$ fifo_v $end
$upscope $end
$scope module reg_inst $end
$var reg 32 -$ wdata1[31:0] $end
$var reg 4 .$ wadr1[3:0] $end
$var reg 1 /$ wen1 $end
$var reg 32 0$ wdata2[31:0] $end
$var reg 4 1$ wadr2[3:0] $end
$var reg 1 2$ wen2 $end
$var reg 1 3$ wcry $end
$var reg 1 4$ wzero $end
$var reg 1 5$ wneg $end
$var reg 1 6$ wovr $end
$var reg 1 7$ cspr_wb $end
$var reg 32 8$ reg_rd1[31:0] $end
$var reg 4 9$ radr1[3:0] $end
$var reg 1 :$ reg_v1 $end
$var reg 32 ;$ reg_rd2[31:0] $end
$var reg 4 <$ radr2[3:0] $end
$var reg 1 =$ reg_v2 $end
$var reg 32 >$ reg_rd3[31:0] $end
$var reg 4 ?$ radr3[3:0] $end
$var reg 1 @$ reg_v3 $end
$var reg 1 A$ reg_cry $end
$var reg 1 B$ reg_zero $end
$var reg 1 C$ reg_neg $end
$var reg 1 D$ reg_cznv $end
$var reg 1 E$ reg_ovr $end
$var reg 1 F$ reg_vv $end
$var reg 4 G$ inval_adr1[3:0] $end
$var reg 1 H$ inval1 $end
$var reg 4 I$ inval_adr2[3:0] $end
$var reg 1 J$ inval2 $end
$var reg 1 K$ inval_czn $end
$var reg 1 L$ inval_ovr $end
$var reg 32 M$ reg_pc[31:0] $end
$var reg 1 N$ reg_pcv $end
$var reg 1 O$ inc_pc $end
$var reg 1 P$ ck $end
$var reg 1 Q$ reset_n $end
$var reg 1 R$ vdd $end
$var reg 1 S$ vss $end
$var reg 16 T$ valid_r_bitmap[15:0] $end
$var reg 32 U$ d0[31:0] $end
$var reg 32 V$ d1[31:0] $end
$var reg 32 W$ d2[31:0] $end
$var reg 32 X$ d3[31:0] $end
$var reg 32 Y$ d4[31:0] $end
$var reg 32 Z$ d5[31:0] $end
$var reg 32 [$ d6[31:0] $end
$var reg 32 \$ d7[31:0] $end
$var reg 32 ]$ d8[31:0] $end
$var reg 32 ^$ d9[31:0] $end
$var reg 32 _$ d10[31:0] $end
$var reg 32 `$ d11[31:0] $end
$var reg 32 a$ d12[31:0] $end
$var reg 32 b$ d_sp[31:0] $end
$var reg 32 c$ d_lr[31:0] $end
$var reg 32 d$ d_pc[31:0] $end
$var reg 6 e$ cspr[5:0] $end
$var reg 32 f$ q0[31:0] $end
$var reg 32 g$ q1[31:0] $end
$var reg 32 h$ q2[31:0] $end
$var reg 32 i$ q3[31:0] $end
$var reg 32 j$ q4[31:0] $end
$var reg 32 k$ q5[31:0] $end
$var reg 32 l$ q6[31:0] $end
$var reg 32 m$ q7[31:0] $end
$var reg 32 n$ q8[31:0] $end
$var reg 32 o$ q9[31:0] $end
$var reg 32 p$ q10[31:0] $end
$var reg 32 q$ q11[31:0] $end
$var reg 32 r$ q12[31:0] $end
$var reg 32 s$ q_sp[31:0] $end
$var reg 32 t$ q_lr[31:0] $end
$var reg 32 u$ q_pc[31:0] $end
$scope module registre_0 $end
$var reg 32 v$ d[31:0] $end
$var reg 1 w$ ck $end
$var reg 1 x$ reset_n $end
$var reg 32 y$ q[31:0] $end
$upscope $end
$scope module registre_1 $end
$var reg 32 z$ d[31:0] $end
$var reg 1 {$ ck $end
$var reg 1 |$ reset_n $end
$var reg 32 }$ q[31:0] $end
$upscope $end
$scope module registre_2 $end
$var reg 32 !% d[31:0] $end
$var reg 1 "% ck $end
$var reg 1 #% reset_n $end
$var reg 32 $% q[31:0] $end
$upscope $end
$scope module registre_3 $end
$var reg 32 %% d[31:0] $end
$var reg 1 &% ck $end
$var reg 1 '% reset_n $end
$var reg 32 (% q[31:0] $end
$upscope $end
$scope module registre_4 $end
$var reg 32 )% d[31:0] $end
$var reg 1 *% ck $end
$var reg 1 +% reset_n $end
$var reg 32 ,% q[31:0] $end
$upscope $end
$scope module registre_5 $end
$var reg 32 -% d[31:0] $end
$var reg 1 .% ck $end
$var reg 1 /% reset_n $end
$var reg 32 0% q[31:0] $end
$upscope $end
$scope module registre_6 $end
$var reg 32 1% d[31:0] $end
$var reg 1 2% ck $end
$var reg 1 3% reset_n $end
$var reg 32 4% q[31:0] $end
$upscope $end
$scope module registre_7 $end
$var reg 32 5% d[31:0] $end
$var reg 1 6% ck $end
$var reg 1 7% reset_n $end
$var reg 32 8% q[31:0] $end
$upscope $end
$scope module registre_8 $end
$var reg 32 9% d[31:0] $end
$var reg 1 :% ck $end
$var reg 1 ;% reset_n $end
$var reg 32 <% q[31:0] $end
$upscope $end
$scope module registre_9 $end
$var reg 32 =% d[31:0] $end
$var reg 1 >% ck $end
$var reg 1 ?% reset_n $end
$var reg 32 @% q[31:0] $end
$upscope $end
$scope module registre_10 $end
$var reg 32 A% d[31:0] $end
$var reg 1 B% ck $end
$var reg 1 C% reset_n $end
$var reg 32 D% q[31:0] $end
$upscope $end
$scope module registre_11 $end
$var reg 32 E% d[31:0] $end
$var reg 1 F% ck $end
$var reg 1 G% reset_n $end
$var reg 32 H% q[31:0] $end
$upscope $end
$scope module registre_12 $end
$var reg 32 I% d[31:0] $end
$var reg 1 J% ck $end
$var reg 1 K% reset_n $end
$var reg 32 L% q[31:0] $end
$upscope $end
$scope module registre_sp $end
$var reg 32 M% d[31:0] $end
$var reg 1 N% ck $end
$var reg 1 O% reset_n $end
$var reg 32 P% q[31:0] $end
$upscope $end
$scope module registre_lr $end
$var reg 32 Q% d[31:0] $end
$var reg 1 R% ck $end
$var reg 1 S% reset_n $end
$var reg 32 T% q[31:0] $end
$upscope $end
$scope module registre_pc $end
$var reg 32 U% d[31:0] $end
$var reg 1 V% ck $end
$var reg 1 W% reset_n $end
$var reg 32 X% q[31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module exec_i $end
$var reg 1 Y% dec2exe_empty $end
$var reg 1 Z% exe_pop $end
$var reg 32 [% dec_op1[31:0] $end
$var reg 32 \% dec_op2[31:0] $end
$var reg 4 ]% dec_exe_dest[3:0] $end
$var reg 1 ^% dec_exe_wb $end
$var reg 1 _% dec_flag_wb $end
$var reg 32 `% dec_mem_data[31:0] $end
$var reg 4 a% dec_mem_dest[3:0] $end
$var reg 1 b% dec_pre_index $end
$var reg 1 c% dec_mem_lw $end
$var reg 1 d% dec_mem_lb $end
$var reg 1 e% dec_mem_sw $end
$var reg 1 f% dec_mem_sb $end
$var reg 1 g% dec_shift_lsl $end
$var reg 1 h% dec_shift_lsr $end
$var reg 1 i% dec_shift_asr $end
$var reg 1 j% dec_shift_ror $end
$var reg 1 k% dec_shift_rrx $end
$var reg 5 l% dec_shift_val[4:0] $end
$var reg 1 m% dec_cy $end
$var reg 1 n% dec_comp_op1 $end
$var reg 1 o% dec_comp_op2 $end
$var reg 1 p% dec_alu_cy $end
$var reg 2 q% dec_alu_cmd[1:0] $end
$var reg 32 r% exe_res[31:0] $end
$var reg 1 s% exe_c $end
$var reg 1 t% exe_v $end
$var reg 1 u% exe_n $end
$var reg 1 v% exe_z $end
$var reg 4 w% exe_dest[3:0] $end
$var reg 1 x% exe_wb $end
$var reg 1 y% exe_flag_wb $end
$var reg 32 z% exe_mem_adr[31:0] $end
$var reg 32 {% exe_mem_data[31:0] $end
$var reg 4 |% exe_mem_dest[3:0] $end
$var reg 1 }% exe_mem_lw $end
$var reg 1 !& exe_mem_lb $end
$var reg 1 "& exe_mem_sw $end
$var reg 1 #& exe_mem_sb $end
$var reg 1 $& exe2mem_empty $end
$var reg 1 %& mem_pop $end
$var reg 1 && ck $end
$var reg 1 '& reset_n $end
$var reg 1 (& vdd $end
$var reg 1 )& vss $end
$var reg 32 *& shift_out[31:0] $end
$var reg 32 +& shift_out_not[31:0] $end
$var reg 32 ,& op1_not[31:0] $end
$var reg 32 -& mux_out_shift[31:0] $end
$var reg 32 .& mux_out_op1[31:0] $end
$var reg 1 /& exe_push $end
$var reg 1 0& exe2mem_full $end
$var reg 32 1& mem_adr[31:0] $end
$var reg 32 2& alu_out[31:0] $end
$var reg 1 3& shifter_c $end
$var reg 1 4& alu_c $end
$scope module mux_shift $end
$var reg 32 5& a[31:0] $end
$var reg 32 6& b[31:0] $end
$var reg 1 7& s0 $end
$var reg 32 8& z[31:0] $end
$upscope $end
$scope module mux_op1 $end
$var reg 32 9& a[31:0] $end
$var reg 32 :& b[31:0] $end
$var reg 1 ;& s0 $end
$var reg 32 <& z[31:0] $end
$upscope $end
$scope module shifter_inst $end
$var reg 1 =& shift_lsl $end
$var reg 1 >& shift_lsr $end
$var reg 1 ?& shift_asr $end
$var reg 1 @& shift_ror $end
$var reg 1 A& shift_rrx $end
$var reg 5 B& shift_val[4:0] $end
$var reg 32 C& din[31:0] $end
$var reg 1 D& cin $end
$var reg 32 E& dout[31:0] $end
$var reg 1 F& cout $end
$var reg 1 G& vdd $end
$var reg 1 H& vss $end
$upscope $end
$scope module alu_inst $end
$var reg 32 I& op1[31:0] $end
$var reg 32 J& op2[31:0] $end
$var reg 1 K& cin $end
$var reg 2 L& cmd[1:0] $end
$var reg 32 M& res[31:0] $end
$var reg 1 N& cout $end
$var reg 1 O& z $end
$var reg 1 P& n $end
$var reg 1 Q& v $end
$var reg 1 R& vdd $end
$var reg 1 S& vss $end
$var reg 32 T& radd[31:0] $end
$var reg 32 U& resor[31:0] $end
$var reg 32 V& rand[31:0] $end
$var reg 32 W& rxor[31:0] $end
$var reg 32 X& rmux[31:0] $end
$scope module mux $end
$var reg 32 Y& a[31:0] $end
$var reg 32 Z& b[31:0] $end
$var reg 32 [& c[31:0] $end
$var reg 32 \& d[31:0] $end
$var reg 1 ]& s0 $end
$var reg 1 ^& s1 $end
$var reg 32 _& z[31:0] $end
$upscope $end
$upscope $end
$scope module mux_alu $end
$var reg 32 `& a[31:0] $end
$var reg 32 a& b[31:0] $end
$var reg 1 b& s0 $end
$var reg 32 c& z[31:0] $end
$upscope $end
$scope module exec2mem $end
$var reg 72 d& din[71:0] $end
$var reg 72 e& dout[71:0] $end
$var reg 1 f& push $end
$var reg 1 g& pop $end
$var reg 1 h& full $end
$var reg 1 i& empty $end
$var reg 1 j& reset_n $end
$var reg 1 k& ck $end
$var reg 1 l& vdd $end
$var reg 1 m& vss $end
$var reg 72 n& fifo_d[71:0] $end
$var reg 1 o& fifo_v $end
$upscope $end
$upscope $end
$scope module mem_i $end
$var reg 1 p& exe2mem_empty $end
$var reg 1 q& mem_pop $end
$var reg 32 r& exe_mem_adr[31:0] $end
$var reg 32 s& exe_mem_data[31:0] $end
$var reg 4 t& exe_mem_dest[3:0] $end
$var reg 1 u& exe_mem_lw $end
$var reg 1 v& exe_mem_lb $end
$var reg 1 w& exe_mem_sw $end
$var reg 1 x& exe_mem_sb $end
$var reg 32 y& mem_res[31:0] $end
$var reg 4 z& mem_dest[3:0] $end
$var reg 1 {& mem_wb $end
$var reg 32 |& mem_adr[31:0] $end
$var reg 1 }& mem_stw $end
$var reg 1 !' mem_stb $end
$var reg 1 "' mem_load $end
$var reg 32 #' mem_data[31:0] $end
$var reg 32 $' dc_data[31:0] $end
$var reg 1 %' dc_stall $end
$var reg 1 &' vdd $end
$var reg 1 '' vss $end
$var reg 32 (' lb_data[31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU !
0"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #
0$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %
0&
0'
0(
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU )
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU *
0+
0,
0-
1.
0/
b00000000000000000000000000000100 0
b00000000000000000000000000000100 1
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2
03
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 4
05
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 6
07
08
09
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU :
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ;
0<
0=
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU >
0?
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU @
0A
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU B
0C
0D
0E
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU F
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU G
0H
0I
0J
1K
0L
0M
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU N
UO
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU P
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Q
bUUUU R
US
UT
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU U
bUUUU V
UW
UX
UY
UZ
U[
U\
U]
U^
U_
U`
bUUUUU a
Ub
Uc
Ud
Ue
Uf
bUU g
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU h
Ui
1j
1k
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU l
Um
Un
Uo
0p
bUUUU q
Ur
Us
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU t
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU u
bUUUU v
Uw
Ux
Uy
Uz
U{
0|
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU }
bUUUU !"
0""
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #"
0$"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %"
0&"
U'"
0("
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU )"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU *"
U+"
1,"
0-"
0."
1/"
00"
01"
02"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 3"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 4"
05"
16"
07"
U8"
09"
0:"
1;"
0<"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ="
U>"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ?"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU @"
bUUUU A"
UB"
UC"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU D"
bUUUU E"
UF"
UG"
UH"
UI"
UJ"
UK"
UL"
UM"
UN"
UO"
bUUUUU P"
UQ"
UR"
US"
UT"
UU"
1V"
bUU W"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU X"
UY"
UZ"
U["
0\"
bUUUU ]"
U^"
U_"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU `"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU a"
Ub"
0c"
Ud"
1e"
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU f"
bUUUU g"
0h"
0i"
0j"
1k"
0l"
0m"
1n"
1o"
0p"
0q"
0r"
Us"
Ut"
Uu"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
U)#
U*#
U+#
U,#
0-#
0.#
U/#
U0#
U1#
U2#
03#
U4#
b0000000000000000 5#
bUUUUUUUUUUUUUUUU 6#
bUUUUUUUUUUUUUUUU 7#
08#
U9#
bUUUUU :#
b1111 ;#
bUUUU <#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU =#
1>#
bUUUU ?#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU @#
1A#
bUUUU B#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C#
1D#
bUUUU E#
1F#
b1111 G#
0H#
UI#
UJ#
UK#
UL#
UM#
UN#
0O#
0P#
b00000000000000000000000000000000 Q#
1R#
1S#
0T#
1U#
0V#
UW#
1X#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Y#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Z#
bUUUU [#
0\#
0]#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU00 ^#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU _#
bUUUU `#
Ua#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
b00000 k#
Ul#
0m#
0n#
0o#
bUU p#
b0000 q#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU00UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU00000000000000U000UU r#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU s#
Ut#
1u#
0v#
Uw#
0x#
0y#
1z#
0{#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU |#
U}#
b00000000000000000000000000000000 !$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU "$
1#$
0$$
0%$
U&$
0'$
0($
1)$
0*$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU +$
U,$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU -$
bUUUU .$
U/$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 0$
bUUUU 1$
02$
U3$
04$
U5$
U6$
U7$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 8$
bUUUU 9$
1:$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ;$
bUUUU <$
1=$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU >$
bUUUU ?$
1@$
UA$
UB$
UC$
UD$
UE$
UF$
bUUUU G$
1H$
b1111 I$
0J$
0K$
0L$
b00000000000000000000000000000000 M$
1N$
1O$
0P$
0Q$
1R$
0S$
b1111111111111111 T$
b00000000000000000000000000000000 U$
b00000000000000000000000000000000 V$
b00000000000000000000000000000000 W$
b00000000000000000000000000000000 X$
b00000000000000000000000000000000 Y$
b00000000000000000000000000000000 Z$
b00000000000000000000000000000000 [$
b00000000000000000000000000000000 \$
b00000000000000000000000000000000 ]$
b00000000000000000000000000000000 ^$
b00000000000000000000000000000000 _$
b00000000000000000000000000000000 `$
b00000000000000000000000000000000 a$
b00000000000000000000000000000000 b$
b00000000000000000000000000000000 c$
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU d$
b110000 e$
b00000000000000000000000000000000 f$
b00000000000000000000000000000000 g$
b00000000000000000000000000000000 h$
b00000000000000000000000000000000 i$
b00000000000000000000000000000000 j$
b00000000000000000000000000000000 k$
b00000000000000000000000000000000 l$
b00000000000000000000000000000000 m$
b00000000000000000000000000000000 n$
b00000000000000000000000000000000 o$
b00000000000000000000000000000000 p$
b00000000000000000000000000000000 q$
b00000000000000000000000000000000 r$
b00000000000000000000000000000000 s$
b00000000000000000000000000000000 t$
b00000000000000000000000000000000 u$
b00000000000000000000000000000000 v$
0w$
0x$
b00000000000000000000000000000000 y$
b00000000000000000000000000000000 z$
0{$
0|$
b00000000000000000000000000000000 }$
b00000000000000000000000000000000 !%
0"%
0#%
b00000000000000000000000000000000 $%
b00000000000000000000000000000000 %%
0&%
0'%
b00000000000000000000000000000000 (%
b00000000000000000000000000000000 )%
0*%
0+%
b00000000000000000000000000000000 ,%
b00000000000000000000000000000000 -%
0.%
0/%
b00000000000000000000000000000000 0%
b00000000000000000000000000000000 1%
02%
03%
b00000000000000000000000000000000 4%
b00000000000000000000000000000000 5%
06%
07%
b00000000000000000000000000000000 8%
b00000000000000000000000000000000 9%
0:%
0;%
b00000000000000000000000000000000 <%
b00000000000000000000000000000000 =%
0>%
0?%
b00000000000000000000000000000000 @%
b00000000000000000000000000000000 A%
0B%
0C%
b00000000000000000000000000000000 D%
b00000000000000000000000000000000 E%
0F%
0G%
b00000000000000000000000000000000 H%
b00000000000000000000000000000000 I%
0J%
0K%
b00000000000000000000000000000000 L%
b00000000000000000000000000000000 M%
0N%
0O%
b00000000000000000000000000000000 P%
b00000000000000000000000000000000 Q%
0R%
0S%
b00000000000000000000000000000000 T%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU U%
0V%
0W%
b00000000000000000000000000000000 X%
UY%
1Z%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU [%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU \%
bUUUU ]%
U^%
U_%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU `%
bUUUU a%
Ub%
Uc%
Ud%
Ue%
Uf%
Ug%
Uh%
Ui%
Uj%
Uk%
bUUUUU l%
Um%
Un%
Uo%
Up%
bUU q%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU r%
Us%
Ut%
Uu%
0v%
bUUUU w%
Ux%
Uy%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU z%
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU {%
bUUUU |%
U}%
U!&
U"&
U#&
U$&
0%&
0&&
0'&
1(&
0)&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU *&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU +&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU ,&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU -&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU .&
0/&
00&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 1&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 2&
U3&
U4&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 5&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 6&
U7&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 8&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU 9&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU :&
U;&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU <&
U=&
U>&
U?&
U@&
UA&
bUUUUU B&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU C&
UD&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU E&
UF&
1G&
0H&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU I&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU J&
UK&
bUU L&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU M&
UN&
0O&
UP&
UQ&
1R&
0S&
bXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX T&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU U&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU V&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU W&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU X&
bXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Y&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU Z&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU [&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU \&
U]&
U^&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU _&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU `&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU a&
Ub&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU c&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU d&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU e&
0f&
0g&
0h&
Ui&
0j&
0k&
1l&
0m&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU n&
Uo&
Up&
0q&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU r&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU s&
bUUUU t&
Uu&
Uv&
Uw&
Ux&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU y&
bUUUU z&
0{&
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU |&
0}&
0!'
0"'
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #'
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $'
0%'
1&'
0''
b000000000000000000000000UUUUUUUU ('
#1000000
1,
1=
1I
1O
1f
1i
0j
1{
1'"
1+"
0,"
1-"
06"
18"
1:"
0>"
1U"
1b"
1d"
0e"
1i"
0I#
0J#
0K#
0L#
1M#
1N#
0X#
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU00UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU000000000000000000UU r#
1w#
1y#
0}#
1&$
1($
0,$
0A$
0B$
0C$
1D$
0E$
1F$
1P$
b00000000000000000000000000000100 d$
1w$
1{$
1"%
1&%
1*%
1.%
12%
16%
1:%
1>%
1B%
1F%
1J%
1N%
1R%
b00000000000000000000000000000100 U%
1V%
1Y%
1$&
1&&
1i&
1k&
0o&
1p&
#2000000
0,
1-
0=
0I
1J
0-"
1."
19"
0:"
0i"
1j"
1x#
0y#
1'$
0($
0P$
1Q$
0w$
1x$
0{$
1|$
0"%
1#%
0&%
1'%
0*%
1+%
0.%
1/%
02%
13%
06%
17%
0:%
1;%
0>%
1?%
0B%
1C%
0F%
1G%
0J%
1K%
0N%
1O%
0R%
1S%
0V%
1W%
0&&
1'&
1j&
0k&
#3000000
b00000000000000000000000000000000 !
1"
b11100000100000000001000000000000 #
1,
b00000000000000000000000000000000 2
13
b11100000100000000001000000000000 4
1=
b00000000000000000000000000000000 >
1?
b11100000100000000001000000000000 @
1I
1M
b00000000000000000000000000000000 h
0i
b00000000000000000000000000000000 #"
1$"
b11100000100000000001000000000000 %"
0'"
1("
b00000000000000000000000000000000 )"
1-"
11"
b11100000100000000001000000000000 3"
15"
1:"
b00000000000000000000000000000000 `"
0b"
1c"
1i"
0o"
0>#
0A#
0D#
b00000000000000000000000000000100 Q#
0T#
1y#
b00000000000000000000000000000100 !$
b00000000000000000000000000000000 "$
1$$
0%$
0&$
1($
b00000000000000000000000000000000 +$
1,$
0:$
0=$
0@$
b00000000000000000000000000000100 M$
1P$
b1111111111111110 T$
b00000000000000000000000000000100 u$
1w$
1{$
1"%
1&%
1*%
1.%
12%
16%
1:%
1>%
1B%
1F%
1J%
1N%
1R%
1V%
b00000000000000000000000000000100 X%
1&&
1k&
#4000000
0,
0=
0I
0-"
0:"
0i"
0y#
0($
0P$
b00000000000000000000000000001000 d$
0w$
0{$
0"%
0&%
0*%
0.%
02%
06%
0:%
0>%
0B%
0F%
0J%
0N%
0R%
b00000000000000000000000000001000 U%
0V%
0&&
0k&
#5000000
b00000000000000000000000000000100 !
b11100000100010111010000000001100 #
1,
b00000000000000000000000000000100 2
b11100000100010111010000000001100 4
1=
b00000000000000000000000000000100 >
b11100000100010111010000000001100 @
1I
1M
b11100000100000000001000000000000 N
0O
b00000000000000000000000000000100 h
1j
b00000000000000000000000000000100 #"
b11100000100010111010000000001100 %"
1("
b00000000000000000000000000000100 )"
b11100000100000000001000000000000 *"
0+"
1,"
1-"
11"
02"
b11100000100010111010000000001100 3"
b11100000100000000001000000000000 4"
15"
16"
07"
08"
1:"
b11100000100000000001000000000000 ="
1>"
b00000000000000000000000000000100 `"
b11100000100000000001000000000000 a"
1c"
0d"
1e"
1i"
1m"
1p"
1z"
b000U000000000000 7#
b0000 <#
b00000000000000000000000000000000 =#
b0000 B#
b00000000000000000000000000000000 C#
b0001 E#
b00000000000000000000000000001000 Q#
0T#
1W#
1X#
b00000000000000000000000000000000 Y#
b0001 [#
1\#
b11111110000000000100000000000000 ^#
b0001 `#
0a#
1f#
b00 p#
b000000000000000000000000000000000UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU00011000000000000000000000000000000000000100001000000000000000 r#
1t#
1y#
b00000000000000000000000000001000 !$
b00000000000000000000000000000100 "$
1$$
0%$
1($
b00000000000000000000000000000100 +$
b00000000000000000000000000000000 8$
b0000 9$
b00000000000000000000000000000000 >$
b0000 ?$
b0001 G$
b00000000000000000000000000001000 M$
1P$
b00000000000000000000000000001000 u$
1w$
1{$
1"%
1&%
1*%
1.%
12%
16%
1:%
1>%
1B%
1F%
1J%
1N%
1R%
1V%
b00000000000000000000000000001000 X%
1&&
1k&
#6000000
